{"version":3,"sources":["src/sdk/PronunciationAssessmentConfig.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAGlC,iDAA2C;AAC3C,6CAMsB;AAatB;;;;GAIG;AACH,MAAa,6BAA6B;IAOtC;;;;;;;OAOG;IACH,YAAmB,aAAqB,EACrB,gBAAsD,iDAAoC,CAAC,SAAS,EACpG,cAAkD,+CAAkC,CAAC,OAAO,EAC5F,eAAwB,KAAK;QAC5C,wBAAS,CAAC,sBAAsB,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,GAAG,IAAI,+BAAkB,EAAE,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,qCAAqC,EAAE,aAAa,CAAC,CAAC;QACjG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,qCAAqC,EAAE,iDAAoC,CAAC,aAAa,CAAC,CAAC,CAAC;QACvI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,mCAAmC,EAAE,+CAAkC,CAAC,WAAW,CAAC,CAAC,CAAC;QACjI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,oCAAoC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3G,CAAC;IAED;;;;;;;;;OASG;IACI,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,wBAAS,CAAC,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,IAAI,6BAA6B,CAAC,EAAE,CAAC,CAAC;QACrD,MAAM,CAAC,cAAc,GAAG,IAAI,+BAAkB,EAAE,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,uBAAU,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;QAC7E,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,8BAA8B,CAAC,CAAC;IACtF,CAAC;IAEM,OAAO,CAAC,UAAsB;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,MAAM,QAAQ,GAAG,UAAU,CAAC,YAAqC,CAAC;QAClE,QAAQ,CAAC,+BAA+B,GAAG,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC;QAC7E,QAAQ,CAAC,aAAa,CAAC,gCAAgC,CACnD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,uBAAU,CAAC,8BAA8B,CAAC,EACtE,IAAI,CAAC,0BAA0B,EAC/B,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;;OAMG;IACH,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,uBAAU,CAAC,qCAAqC,CAAC,CAAC;IACzF,CAAC;IAED;;;;;;OAMG;IACH,IAAW,aAAa,CAAC,aAAqB;QAC1C,wBAAS,CAAC,uBAAuB,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,uBAAU,CAAC,qCAAqC,EAAE,aAAa,CAAC,CAAC;IACjG,CAAC;IAED;;;;;;;;OAQG;IACH,IAAW,eAAe,CAAC,eAAuB;QAC9C,wBAAS,CAAC,uBAAuB,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QACtE,IAAI,CAAC,mBAAmB,GAAG,eAAe,CAAC;IAC/C,CAAC;IAED;;;;;;;OAOG;IACH,IAAW,YAAY,CAAC,YAAqB;QACzC,MAAM,kBAAkB,GAAG,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,uBAAU,CAAC,oCAAoC,EAAE,kBAAkB,CAAC,CAAC;IACrG,CAAC;IAED;;;;;;;OAOG;IACH,IAAW,YAAY;QACnB,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,uBAAU,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;QACjH,OAAO,CAAC,kBAAkB,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,CAAC;IACzD,CAAC;IAED;;;;;;;OAOG;IACH,IAAW,iBAAiB,CAAC,iBAAyB;QAClD,IAAI,CAAC,qBAAqB,GAAG,iBAAiB,CAAC;IACnD,CAAC;IAED;;;;;;;OAOG;IACH,IAAW,uBAAuB,CAAC,uBAAgC;QAC/D,IAAI,CAAC,2BAA2B,GAAG,uBAAuB,CAAC;IAC/D,CAAC;IAED;;;;;;;OAOG;IACI,gCAAgC,CAAC,KAAa;QACjD,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;IAC5C,CAAC;IAED;;;;;;OAMG;IACH,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAEO,UAAU;QACd,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;QAClG,MAAM,UAAU,GAAgC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAgC,CAAC;QAEtG,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,qCAAqC,CAAC,CAAC;QACxG,IAAI,aAAa,EAAE;YACf,UAAU,CAAC,aAAa,GAAG,aAAa,CAAC;SAC5C;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,qCAAqC,CAAC,CAAC;QACxG,IAAI,aAAa,EAAE;YACf,UAAU,CAAC,aAAa,GAAG,aAAa,CAAC;SAC5C;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,mCAAmC,CAAC,CAAC;QACpG,IAAI,WAAW,EAAE;YACb,UAAU,CAAC,WAAW,GAAG,WAAW,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;SACzD;QAED,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,UAAU,CAAC,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC;SAC7D;QAED,UAAU,CAAC,uBAAuB,GAAG,IAAI,CAAC,2BAA2B,CAAC;QAEtE,wCAAwC;QACxC,UAAU,CAAC,SAAS,GAAG,eAAe,CAAC;QAEvC,MAAM,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,oCAAoC,CAAC,CAAC;QAC5G,IAAI,kBAAkB,EAAE;YACpB,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/C;QAED,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,uBAAU,CAAC,8BAA8B,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3G,CAAC;CAEJ;AAlND,sEAkNC","file":"PronunciationAssessmentConfig.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports.js\";\r\n\r\ninterface PronunciationAssessmentJSON {\r\n    referenceText: string;\r\n    gradingSystem: string;\r\n    granularity: string;\r\n    phonemeAlphabet: string;\r\n    nbestPhonemeCount: number;\r\n    dimension: string;\r\n    enableMiscue: boolean;\r\n    enableProsodyAssessment: boolean;\r\n}\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n    private privPhonemeAlphabet: string;\r\n    private privNBestPhonemeCount: number;\r\n    private privEnableProsodyAssessment: boolean;\r\n    private privContentAssessmentTopic: string;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     * This method is designed to support the pronunciation assessment parameters still in preview.\r\n     * Under normal circumstances, use the constructor instead.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.expectContentAssessmentResponse = !!this.privContentAssessmentTopic;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(\r\n            this.properties.getProperty(PropertyId.PronunciationAssessment_Params),\r\n            this.privContentAssessmentTopic,\r\n            recoBase.isSpeakerDiarizationEnabled);\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * Sets the phoneme alphabet.\r\n     * The valid values are \"SAPI\" (default) and \"IPA\".\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\r\n     * @function\r\n     * @public\r\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\r\n     */\r\n    public set phonemeAlphabet(phonemeAlphabet: string) {\r\n        Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\r\n        this.privPhonemeAlphabet = phonemeAlphabet;\r\n    }\r\n\r\n    /**\r\n     * Sets the boolean enableMiscue property.\r\n     * Added in version 1.26.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\r\n     * @function\r\n     * @public\r\n     * @param {boolean} enableMiscue - enable miscue.\r\n     */\r\n    public set enableMiscue(enableMiscue: boolean) {\r\n        const enableMiscueString = enableMiscue ? \"true\" : \"false\";\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, enableMiscueString);\r\n    }\r\n\r\n    /**\r\n     * Gets the boolean enableMiscue property.\r\n     * Added in version 1.26.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\r\n     * @function\r\n     * @public\r\n     * @return {boolean} enableMiscue - enable miscue.\r\n     */\r\n    public get enableMiscue(): boolean {\r\n        const enableMiscueString = this.properties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue, \"false\");\r\n        return (enableMiscueString.toLowerCase() === \"true\");\r\n    }\r\n\r\n    /**\r\n     * Sets the nbest phoneme count\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\r\n     * @function\r\n     * @public\r\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\r\n     */\r\n    public set nbestPhonemeCount(nbestPhonemeCount: number) {\r\n        this.privNBestPhonemeCount = nbestPhonemeCount;\r\n    }\r\n\r\n    /**\r\n     * Enables the prosody assessment.\r\n     * Added in version 1.34.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableProsodyAssessment\r\n     * @function\r\n     * @public\r\n     * @param {boolean} enableProsodyAssessment - enable prosody assessment.\r\n     */\r\n    public set enableProsodyAssessment(enableProsodyAssessment: boolean) {\r\n        this.privEnableProsodyAssessment = enableProsodyAssessment;\r\n    }\r\n\r\n    /**\r\n     * Enables content assessment and sets the topic.\r\n     * Added in version 1.34.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableContentAssessmentWithTopic\r\n     * @function\r\n     * @public\r\n     * @param {string} topic - Topic for content assessment.\r\n     */\r\n    public enableContentAssessmentWithTopic(topic: string): void {\r\n        this.privContentAssessmentTopic = topic;\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson: PronunciationAssessmentJSON = JSON.parse(jsonString) as PronunciationAssessmentJSON;\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        if (this.privPhonemeAlphabet) {\r\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\r\n        }\r\n\r\n        if (this.privNBestPhonemeCount) {\r\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\r\n        }\r\n\r\n        paramsJson.enableProsodyAssessment = this.privEnableProsodyAssessment;\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString) {\r\n            paramsJson.enableMiscue = this.enableMiscue;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n"]}