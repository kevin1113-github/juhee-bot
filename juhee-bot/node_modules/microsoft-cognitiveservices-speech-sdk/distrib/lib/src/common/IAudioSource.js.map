{"version":3,"sources":["src/common/IAudioSource.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC","file":"IAudioSource.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ISpeechConfigAudioDevice } from \"../common.speech/Exports.js\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat.js\";\r\nimport { AudioSourceEvent } from \"./AudioSourceEvents.js\";\r\nimport { EventSource } from \"./EventSource.js\";\r\nimport { IDetachable } from \"./IDetachable.js\";\r\nimport { IStreamChunk } from \"./Stream.js\";\r\n\r\nexport interface IAudioSource {\r\n    id(): string;\r\n    turnOn(): Promise<void>;\r\n    attach(audioNodeId: string): Promise<IAudioStreamNode>;\r\n    detach(audioNodeId: string): void;\r\n    turnOff(): Promise<void>;\r\n    events: EventSource<AudioSourceEvent>;\r\n    format: Promise<AudioStreamFormatImpl>;\r\n    deviceInfo: Promise<ISpeechConfigAudioDevice>;\r\n    setProperty?(name: string, value: string): void;\r\n    getProperty?(name: string, def?: string): string;\r\n}\r\n\r\nexport interface IAudioStreamNode extends IDetachable {\r\n    id(): string;\r\n    read(): Promise<IStreamChunk<ArrayBuffer>>;\r\n}\r\n"]}