{"version":3,"sources":["src/common/Events.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAElC,yCAA+C;AAC/C,qDAA+C;AAI/C,MAAa,MAAM;IAGR,MAAM,CAAC,cAAc,CAAC,WAAwC;QACjE,IAAI,CAAC,WAAW,EAAE;YACd,MAAM,IAAI,4BAAiB,CAAC,aAAa,CAAC,CAAC;SAC9C;QAED,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC;IACtC,CAAC;IAEM,MAAM,KAAK,QAAQ;QACtB,OAAO,MAAM,CAAC,YAAY,CAAC;IAC/B,CAAC;;AAbL,wBAcC;AAbkB,mBAAY,GAAgC,IAAI,4BAAW,EAAiB,CAAC","file":"Events.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"./Error.js\";\r\nimport { EventSource } from \"./EventSource.js\";\r\nimport { IEventSource } from \"./IEventSource.js\";\r\nimport { PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class Events {\r\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static setEventSource(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.privInstance = eventSource;\r\n    }\r\n\r\n    public static get instance(): IEventSource<PlatformEvent> {\r\n        return Events.privInstance;\r\n    }\r\n}\r\n"]}