{"version":3,"sources":["src/common/StringUtils.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAIlC;;GAEG;AACH,MAAa,WAAW;IAEpB;;;;;;OAMG;IACI,MAAM,CAAC,YAAY,CAAC,MAAc,EAAE,YAAuC;QAC9E,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,EAAE,CAAC;SACb;QAED,IAAI,CAAC,YAAY,EAAE;YACf,OAAO,MAAM,CAAC;SACjB;QAED,IAAI,SAAS,GAAW,EAAE,CAAC;QAC3B,IAAI,GAAG,GAAW,EAAE,CAAC;QAErB,MAAM,iBAAiB,GAAG,CAAC,GAAW,EAAQ,EAAE;YAC5C,SAAS,IAAI,GAAG,CAAC;QACrB,CAAC,CAAC;QACF,MAAM,WAAW,GAAG,CAAC,GAAW,EAAQ,EAAE;YACtC,GAAG,IAAI,GAAG,CAAC;QACf,CAAC,CAAC;QACF,IAAI,UAAU,GAA0B,iBAAiB,CAAC;QAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,CAAC,GAAW,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,IAAI,GAAW,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEhE,QAAQ,CAAC,EAAE;gBACP,KAAK,GAAG;oBACJ,IAAI,IAAI,KAAK,GAAG,EAAE;wBACd,UAAU,CAAC,GAAG,CAAC,CAAC;wBAChB,CAAC,EAAE,CAAC;qBACP;yBAAM;wBACH,UAAU,GAAG,WAAW,CAAC;qBAC5B;oBACD,MAAM;gBAEV,KAAK,GAAG;oBACJ,IAAI,IAAI,KAAK,GAAG,EAAE;wBACd,UAAU,CAAC,GAAG,CAAC,CAAC;wBAChB,CAAC,EAAE,CAAC;qBACP;yBAAM;wBACH,IAAI,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;4BAClC,SAAS,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;yBAClC;wBAED,UAAU,GAAG,iBAAiB,CAAC;wBAC/B,GAAG,GAAG,EAAE,CAAC;qBACZ;oBACD,MAAM;gBAEV;oBACI,UAAU,CAAC,CAAC,CAAC,CAAC;oBACd,MAAM;aACb;SACJ;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ;AAjED,kCAiEC","file":"StringUtils.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\n\r\n/**\r\n * String helper functions\r\n */\r\nexport class StringUtils {\r\n\r\n    /**\r\n     * Formats a string by replacing the named {keys} in the string with the values contained in the replacement dictionary.\r\n     * @param format The format string that contains the parts to replace surrounded by {}. For example: \"wss://{region}.cts.speech.microsoft.com\".\r\n     * If your string needs to contain a { or } you can use the {{ and }} escape sequences respectively.\r\n     * @param replacements The dictionary of replacements. If a replacement is not found, it is replaced with an empty string\r\n     * @returns The formatted string. If you pass in a null or undefined format string, an empty string will be returned\r\n     */\r\n    public static formatString(format: string, replacements: IStringDictionary<string>): string {\r\n        if (!format) {\r\n            return \"\";\r\n        }\r\n\r\n        if (!replacements) {\r\n            return format;\r\n        }\r\n\r\n        let formatted: string = \"\";\r\n        let key: string = \"\";\r\n\r\n        const appendToFormatted = (str: string): void => {\r\n            formatted += str;\r\n        };\r\n        const appendToKey = (str: string): void => {\r\n            key += str;\r\n        };\r\n        let appendFunc: (str: string) => void = appendToFormatted;\r\n\r\n        for (let i = 0; i < format.length; i++) {\r\n            const c: string = format[i];\r\n            const next: string = i + 1 < format.length ? format[i + 1] : \"\";\r\n\r\n            switch (c) {\r\n                case \"{\":\r\n                    if (next === \"{\") {\r\n                        appendFunc(\"{\");\r\n                        i++;\r\n                    } else {\r\n                        appendFunc = appendToKey;\r\n                    }\r\n                    break;\r\n\r\n                case \"}\":\r\n                    if (next === \"}\") {\r\n                        appendFunc(\"}\");\r\n                        i++;\r\n                    } else {\r\n                        if (replacements.hasOwnProperty(key)) {\r\n                            formatted += replacements[key];\r\n                        }\r\n\r\n                        appendFunc = appendToFormatted;\r\n                        key = \"\";\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    appendFunc(c);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return formatted;\r\n    }\r\n}\r\n"]}