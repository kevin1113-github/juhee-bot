{"version":3,"sources":["src/common.speech/CognitiveTokenAuthentication.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAElC,qDAAyD;AACzD,6DAAiE;AACjE,qDAA+C;AAE/C,MAAa,4BAA4B;IAKrC,YAAmB,aAA4D,EAAE,qBAAoE;QACjJ,IAAI,CAAC,aAAa,EAAE;YAChB,MAAM,IAAI,8BAAiB,CAAC,eAAe,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,qBAAqB,EAAE;YACxB,MAAM,IAAI,8BAAiB,CAAC,uBAAuB,CAAC,CAAC;SACxD;QAED,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;QACvC,IAAI,CAAC,yBAAyB,GAAG,qBAAqB,CAAC;IAC3D,CAAC;IAEM,KAAK,CAAC,gBAAwB;QACjC,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,KAAa,EAAY,EAAE,CAAC,IAAI,6BAAQ,CAAC,4BAAW,CAAC,aAAa,EAAE,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,4BAA4B,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC;IACvN,CAAC;IAEM,aAAa,CAAC,gBAAwB;QACzC,OAAO,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,KAAa,EAAY,EAAE,CAAC,IAAI,6BAAQ,CAAC,4BAAW,CAAC,aAAa,EAAE,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,4BAA4B,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC;IAC/N,CAAC;;AAxBL,oEAyBC;AAxBkB,4CAAe,GAAW,SAAS,CAAC","file":"CognitiveTokenAuthentication.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"../common/Exports.js\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\n\r\nexport class CognitiveTokenAuthentication implements IAuthentication {\r\n    private static privTokenPrefix: string = \"Bearer \";\r\n    private privFetchCallback: (authFetchEventId: string) => Promise<string>;\r\n    private privFetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>;\r\n\r\n    public constructor(fetchCallback: (authFetchEventId: string) => Promise<string>, fetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>) {\r\n        if (!fetchCallback) {\r\n            throw new ArgumentNullError(\"fetchCallback\");\r\n        }\r\n\r\n        if (!fetchOnExpiryCallback) {\r\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\r\n        }\r\n\r\n        this.privFetchCallback = fetchCallback;\r\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\r\n    }\r\n\r\n    public fetch(authFetchEventId: string): Promise<AuthInfo> {\r\n        return this.privFetchCallback(authFetchEventId).then((token: string): AuthInfo => new AuthInfo(HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n\r\n    public fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo> {\r\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token: string): AuthInfo => new AuthInfo(HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n}\r\n"]}